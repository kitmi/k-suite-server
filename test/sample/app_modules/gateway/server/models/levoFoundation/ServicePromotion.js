"use strict";

require("source-map-support/register");

const {
  _
} = require('rk-utils');

const {
  Types,
  Validators,
  Processors,
  Generators,
  Errors: {
    BusinessError,
    DataValidationError,
    DsOperationError
  },
  Utils: {
    Lang: {
      isNothing
    }
  }
} = require('@k-suite/oolong');

module.exports = (db, BaseEntityModel) => {
  const ServicePromotionSpec = class extends BaseEntityModel {
    static async applyModifiers_(context, isUpdating) {
      let {
        raw,
        latest,
        existing,
        i18n
      } = context;
      existing || (existing = {});
      return context;
    }

  };
  ServicePromotionSpec.db = db;
  ServicePromotionSpec.meta = {
    "schemaName": "levoFoundation",
    "name": "servicePromotion",
    "keyField": "id",
    "fields": {
      "startDate": {
        "type": "datetime",
        "default": {
          "oolType": "SymbolToken",
          "name": "now"
        },
        "displayName": "Start Date"
      },
      "endDate": {
        "type": "datetime",
        "optional": true,
        "displayName": "End Date"
      },
      "isValid": {
        "type": "boolean",
        "displayName": "Is Valid",
        "createByDb": true
      },
      "id": {
        "type": "integer",
        "auto": true,
        "writeOnce": true,
        "displayName": "Id",
        "autoIncrementId": true,
        "createByDb": true
      },
      "name": {
        "type": "text",
        "maxLength": 40,
        "subClass": ["name"],
        "displayName": "Name",
        "createByDb": true
      },
      "desc": {
        "type": "text",
        "optional": true,
        "displayName": "Desc"
      },
      "discountAmount": {
        "type": "number",
        "optional": true,
        "displayName": "Discount Amount"
      },
      "price": {
        "type": "integer",
        "displayName": "servicePriceId",
        "createByDb": true
      },
      "discountType": {
        "type": "text",
        "maxLength": 20,
        "subClass": ["code"],
        "displayName": "discountTypeCode",
        "createByDb": true
      }
    },
    "features": {
      "autoId": {
        "field": "id"
      }
    },
    "uniqueKeys": [["id"]],
    "associations": {
      "price": {
        "entity": "servicePrice",
        "isList": false
      },
      "discountType": {
        "entity": "discountType",
        "isList": false
      }
    },
    "fieldDependencies": {
      "id": ["id"]
    }
  };
  return Object.assign(ServicePromotionSpec, {});
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tb2RlbHMvbGV2b0ZvdW5kYXRpb24vU2VydmljZVByb21vdGlvbi5qcyJdLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsIlR5cGVzIiwiVmFsaWRhdG9ycyIsIlByb2Nlc3NvcnMiLCJHZW5lcmF0b3JzIiwiRXJyb3JzIiwiQnVzaW5lc3NFcnJvciIsIkRhdGFWYWxpZGF0aW9uRXJyb3IiLCJEc09wZXJhdGlvbkVycm9yIiwiVXRpbHMiLCJMYW5nIiwiaXNOb3RoaW5nIiwibW9kdWxlIiwiZXhwb3J0cyIsImRiIiwiQmFzZUVudGl0eU1vZGVsIiwiU2VydmljZVByb21vdGlvblNwZWMiLCJhcHBseU1vZGlmaWVyc18iLCJjb250ZXh0IiwiaXNVcGRhdGluZyIsInJhdyIsImxhdGVzdCIsImV4aXN0aW5nIiwiaTE4biIsIm1ldGEiLCJPYmplY3QiLCJhc3NpZ24iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBUUMsT0FBTyxDQUFDLFVBQUQsQ0FBckI7O0FBRUEsTUFBTTtBQUNGQyxFQUFBQSxLQURFO0FBRUZDLEVBQUFBLFVBRkU7QUFHRkMsRUFBQUEsVUFIRTtBQUlGQyxFQUFBQSxVQUpFO0FBS0ZDLEVBQUFBLE1BQU0sRUFBRTtBQUFFQyxJQUFBQSxhQUFGO0FBQWlCQyxJQUFBQSxtQkFBakI7QUFBc0NDLElBQUFBO0FBQXRDLEdBTE47QUFNRkMsRUFBQUEsS0FBSyxFQUFFO0FBQUVDLElBQUFBLElBQUksRUFBRTtBQUFFQyxNQUFBQTtBQUFGO0FBQVI7QUFOTCxJQU9GWCxPQUFPLENBQUMsaUJBQUQsQ0FQWDs7QUFVQVksTUFBTSxDQUFDQyxPQUFQLEdBQWlCLENBQUNDLEVBQUQsRUFBS0MsZUFBTCxLQUF5QjtBQUN0QyxRQUFNQyxvQkFBb0IsR0FBRyxjQUFjRCxlQUFkLENBQThCO0FBT3ZELGlCQUFhRSxlQUFiLENBQTZCQyxPQUE3QixFQUFzQ0MsVUFBdEMsRUFBa0Q7QUFDOUMsVUFBSTtBQUFDQyxRQUFBQSxHQUFEO0FBQU1DLFFBQUFBLE1BQU47QUFBY0MsUUFBQUEsUUFBZDtBQUF3QkMsUUFBQUE7QUFBeEIsVUFBZ0NMLE9BQXBDO0FBQ0FJLE1BQUFBLFFBQVEsS0FBS0EsUUFBUSxHQUFHLEVBQWhCLENBQVI7QUFDQSxhQUFPSixPQUFQO0FBQ0g7O0FBWHNELEdBQTNEO0FBY0FGLEVBQUFBLG9CQUFvQixDQUFDRixFQUFyQixHQUEwQkEsRUFBMUI7QUFDQUUsRUFBQUEsb0JBQW9CLENBQUNRLElBQXJCLEdBQTRCO0FBQ3hCLGtCQUFjLGdCQURVO0FBRXhCLFlBQVEsa0JBRmdCO0FBR3hCLGdCQUFZLElBSFk7QUFJeEIsY0FBVTtBQUNOLG1CQUFhO0FBQ1QsZ0JBQVEsVUFEQztBQUVULG1CQUFXO0FBQ1AscUJBQVcsYUFESjtBQUVQLGtCQUFRO0FBRkQsU0FGRjtBQU1ULHVCQUFlO0FBTk4sT0FEUDtBQVNOLGlCQUFXO0FBQ1AsZ0JBQVEsVUFERDtBQUVQLG9CQUFZLElBRkw7QUFHUCx1QkFBZTtBQUhSLE9BVEw7QUFjTixpQkFBVztBQUNQLGdCQUFRLFNBREQ7QUFFUCx1QkFBZSxVQUZSO0FBR1Asc0JBQWM7QUFIUCxPQWRMO0FBbUJOLFlBQU07QUFDRixnQkFBUSxTQUROO0FBRUYsZ0JBQVEsSUFGTjtBQUdGLHFCQUFhLElBSFg7QUFJRix1QkFBZSxJQUpiO0FBS0YsMkJBQW1CLElBTGpCO0FBTUYsc0JBQWM7QUFOWixPQW5CQTtBQTJCTixjQUFRO0FBQ0osZ0JBQVEsTUFESjtBQUVKLHFCQUFhLEVBRlQ7QUFHSixvQkFBWSxDQUNSLE1BRFEsQ0FIUjtBQU1KLHVCQUFlLE1BTlg7QUFPSixzQkFBYztBQVBWLE9BM0JGO0FBb0NOLGNBQVE7QUFDSixnQkFBUSxNQURKO0FBRUosb0JBQVksSUFGUjtBQUdKLHVCQUFlO0FBSFgsT0FwQ0Y7QUF5Q04sd0JBQWtCO0FBQ2QsZ0JBQVEsUUFETTtBQUVkLG9CQUFZLElBRkU7QUFHZCx1QkFBZTtBQUhELE9BekNaO0FBOENOLGVBQVM7QUFDTCxnQkFBUSxTQURIO0FBRUwsdUJBQWUsZ0JBRlY7QUFHTCxzQkFBYztBQUhULE9BOUNIO0FBbUROLHNCQUFnQjtBQUNaLGdCQUFRLE1BREk7QUFFWixxQkFBYSxFQUZEO0FBR1osb0JBQVksQ0FDUixNQURRLENBSEE7QUFNWix1QkFBZSxrQkFOSDtBQU9aLHNCQUFjO0FBUEY7QUFuRFYsS0FKYztBQWlFeEIsZ0JBQVk7QUFDUixnQkFBVTtBQUNOLGlCQUFTO0FBREg7QUFERixLQWpFWTtBQXNFeEIsa0JBQWMsQ0FDVixDQUNJLElBREosQ0FEVSxDQXRFVTtBQTJFeEIsb0JBQWdCO0FBQ1osZUFBUztBQUNMLGtCQUFVLGNBREw7QUFFTCxrQkFBVTtBQUZMLE9BREc7QUFLWixzQkFBZ0I7QUFDWixrQkFBVSxjQURFO0FBRVosa0JBQVU7QUFGRTtBQUxKLEtBM0VRO0FBcUZ4Qix5QkFBcUI7QUFDakIsWUFBTSxDQUNGLElBREU7QUFEVztBQXJGRyxHQUE1QjtBQTRGQSxTQUFPQyxNQUFNLENBQUNDLE1BQVAsQ0FBY1Ysb0JBQWQsRUFBb0MsRUFBcEMsQ0FBUDtBQUNILENBN0dEIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBfIH0gPSByZXF1aXJlKCdyay11dGlscycpO1xuXG5jb25zdCB7IFxuICAgIFR5cGVzLFxuICAgIFZhbGlkYXRvcnMsIFxuICAgIFByb2Nlc3NvcnMsIFxuICAgIEdlbmVyYXRvcnMsIFxuICAgIEVycm9yczogeyBCdXNpbmVzc0Vycm9yLCBEYXRhVmFsaWRhdGlvbkVycm9yLCBEc09wZXJhdGlvbkVycm9yIH0sIFxuICAgIFV0aWxzOiB7IExhbmc6IHsgaXNOb3RoaW5nIH0gfSBcbn0gPSByZXF1aXJlKCdAay1zdWl0ZS9vb2xvbmcnKTtcbiBcblxubW9kdWxlLmV4cG9ydHMgPSAoZGIsIEJhc2VFbnRpdHlNb2RlbCkgPT4ge1xuICAgIGNvbnN0IFNlcnZpY2VQcm9tb3Rpb25TcGVjID0gY2xhc3MgZXh0ZW5kcyBCYXNlRW50aXR5TW9kZWwgeyAgICBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEFwcGx5aW5nIHByZWRlZmluZWQgbW9kaWZpZXJzIHRvIGVudGl0eSBmaWVsZHMuXG4gICAgICAgICAqIEBwYXJhbSBjb250ZXh0XG4gICAgICAgICAqIEBwYXJhbSBpc1VwZGF0aW5nXG4gICAgICAgICAqIEByZXR1cm5zIHsqfVxuICAgICAgICAgKi9cbiAgICAgICAgc3RhdGljIGFzeW5jIGFwcGx5TW9kaWZpZXJzXyhjb250ZXh0LCBpc1VwZGF0aW5nKSB7XG4gICAgICAgICAgICBsZXQge3JhdywgbGF0ZXN0LCBleGlzdGluZywgaTE4bn0gPSBjb250ZXh0O1xuICAgICAgICAgICAgZXhpc3RpbmcgfHwgKGV4aXN0aW5nID0ge30pO1xuICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQ7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgU2VydmljZVByb21vdGlvblNwZWMuZGIgPSBkYjtcbiAgICBTZXJ2aWNlUHJvbW90aW9uU3BlYy5tZXRhID0ge1xuICAgICAgICBcInNjaGVtYU5hbWVcIjogXCJsZXZvRm91bmRhdGlvblwiLFxuICAgICAgICBcIm5hbWVcIjogXCJzZXJ2aWNlUHJvbW90aW9uXCIsXG4gICAgICAgIFwia2V5RmllbGRcIjogXCJpZFwiLFxuICAgICAgICBcImZpZWxkc1wiOiB7XG4gICAgICAgICAgICBcInN0YXJ0RGF0ZVwiOiB7XG4gICAgICAgICAgICAgICAgXCJ0eXBlXCI6IFwiZGF0ZXRpbWVcIixcbiAgICAgICAgICAgICAgICBcImRlZmF1bHRcIjoge1xuICAgICAgICAgICAgICAgICAgICBcIm9vbFR5cGVcIjogXCJTeW1ib2xUb2tlblwiLFxuICAgICAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCJub3dcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJkaXNwbGF5TmFtZVwiOiBcIlN0YXJ0IERhdGVcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiZW5kRGF0ZVwiOiB7XG4gICAgICAgICAgICAgICAgXCJ0eXBlXCI6IFwiZGF0ZXRpbWVcIixcbiAgICAgICAgICAgICAgICBcIm9wdGlvbmFsXCI6IHRydWUsXG4gICAgICAgICAgICAgICAgXCJkaXNwbGF5TmFtZVwiOiBcIkVuZCBEYXRlXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImlzVmFsaWRcIjoge1xuICAgICAgICAgICAgICAgIFwidHlwZVwiOiBcImJvb2xlYW5cIixcbiAgICAgICAgICAgICAgICBcImRpc3BsYXlOYW1lXCI6IFwiSXMgVmFsaWRcIixcbiAgICAgICAgICAgICAgICBcImNyZWF0ZUJ5RGJcIjogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiaWRcIjoge1xuICAgICAgICAgICAgICAgIFwidHlwZVwiOiBcImludGVnZXJcIixcbiAgICAgICAgICAgICAgICBcImF1dG9cIjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBcIndyaXRlT25jZVwiOiB0cnVlLFxuICAgICAgICAgICAgICAgIFwiZGlzcGxheU5hbWVcIjogXCJJZFwiLFxuICAgICAgICAgICAgICAgIFwiYXV0b0luY3JlbWVudElkXCI6IHRydWUsXG4gICAgICAgICAgICAgICAgXCJjcmVhdGVCeURiXCI6IHRydWVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIm5hbWVcIjoge1xuICAgICAgICAgICAgICAgIFwidHlwZVwiOiBcInRleHRcIixcbiAgICAgICAgICAgICAgICBcIm1heExlbmd0aFwiOiA0MCxcbiAgICAgICAgICAgICAgICBcInN1YkNsYXNzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCJcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIFwiZGlzcGxheU5hbWVcIjogXCJOYW1lXCIsXG4gICAgICAgICAgICAgICAgXCJjcmVhdGVCeURiXCI6IHRydWVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImRlc2NcIjoge1xuICAgICAgICAgICAgICAgIFwidHlwZVwiOiBcInRleHRcIixcbiAgICAgICAgICAgICAgICBcIm9wdGlvbmFsXCI6IHRydWUsXG4gICAgICAgICAgICAgICAgXCJkaXNwbGF5TmFtZVwiOiBcIkRlc2NcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiZGlzY291bnRBbW91bnRcIjoge1xuICAgICAgICAgICAgICAgIFwidHlwZVwiOiBcIm51bWJlclwiLFxuICAgICAgICAgICAgICAgIFwib3B0aW9uYWxcIjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBcImRpc3BsYXlOYW1lXCI6IFwiRGlzY291bnQgQW1vdW50XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcInByaWNlXCI6IHtcbiAgICAgICAgICAgICAgICBcInR5cGVcIjogXCJpbnRlZ2VyXCIsXG4gICAgICAgICAgICAgICAgXCJkaXNwbGF5TmFtZVwiOiBcInNlcnZpY2VQcmljZUlkXCIsXG4gICAgICAgICAgICAgICAgXCJjcmVhdGVCeURiXCI6IHRydWVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImRpc2NvdW50VHlwZVwiOiB7XG4gICAgICAgICAgICAgICAgXCJ0eXBlXCI6IFwidGV4dFwiLFxuICAgICAgICAgICAgICAgIFwibWF4TGVuZ3RoXCI6IDIwLFxuICAgICAgICAgICAgICAgIFwic3ViQ2xhc3NcIjogW1xuICAgICAgICAgICAgICAgICAgICBcImNvZGVcIlxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgXCJkaXNwbGF5TmFtZVwiOiBcImRpc2NvdW50VHlwZUNvZGVcIixcbiAgICAgICAgICAgICAgICBcImNyZWF0ZUJ5RGJcIjogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBcImZlYXR1cmVzXCI6IHtcbiAgICAgICAgICAgIFwiYXV0b0lkXCI6IHtcbiAgICAgICAgICAgICAgICBcImZpZWxkXCI6IFwiaWRcIlxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBcInVuaXF1ZUtleXNcIjogW1xuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIFwiaWRcIlxuICAgICAgICAgICAgXVxuICAgICAgICBdLFxuICAgICAgICBcImFzc29jaWF0aW9uc1wiOiB7XG4gICAgICAgICAgICBcInByaWNlXCI6IHtcbiAgICAgICAgICAgICAgICBcImVudGl0eVwiOiBcInNlcnZpY2VQcmljZVwiLFxuICAgICAgICAgICAgICAgIFwiaXNMaXN0XCI6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJkaXNjb3VudFR5cGVcIjoge1xuICAgICAgICAgICAgICAgIFwiZW50aXR5XCI6IFwiZGlzY291bnRUeXBlXCIsXG4gICAgICAgICAgICAgICAgXCJpc0xpc3RcIjogZmFsc2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgXCJmaWVsZERlcGVuZGVuY2llc1wiOiB7XG4gICAgICAgICAgICBcImlkXCI6IFtcbiAgICAgICAgICAgICAgICBcImlkXCJcbiAgICAgICAgICAgIF1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihTZXJ2aWNlUHJvbW90aW9uU3BlYywge30pO1xufTsiXX0=