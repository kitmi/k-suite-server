"use strict";

require("source-map-support/register");

const Literal = require('@k-suite/app/lib/enum/Literal');

module.exports = Object.assign({}, Literal, {
  APP_MODULES_PATH: 'app_modules',
  BACKEND_PATH: 'server',
  BACKEND_SRC_PATH: 'src',
  CLIENT_SRC_PATH: 'client',
  PUBLIC_PATH: 'public',
  MIDDLEWARES_PATH: 'middlewares',
  SERVER_CFG_NAME: 'server',
  SERVER_FEATURES_PATH: 'serverFeatures',
  APP_FEATURES_PATH: 'appFeatures',
  CONTROLLERS_PATH: 'controllers',
  RESOURCES_PATH: 'resources',
  WS_CONTROLLERS_PATH: 'wsControllers',
  VIEWS_PATH: 'views',
  MODELS_PATH: 'models',
  DB_SCRIPTS_PATH: 'db',
  LOCALE_PATH: 'locale',
  ALLOWED_HTTP_METHODS: new Set(['options', 'get', 'head', 'post', 'put', 'delete', 'trace', 'connect'])
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbnVtL0xpdGVyYWwuanMiXSwibmFtZXMiOlsiTGl0ZXJhbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiT2JqZWN0IiwiYXNzaWduIiwiQVBQX01PRFVMRVNfUEFUSCIsIkJBQ0tFTkRfUEFUSCIsIkJBQ0tFTkRfU1JDX1BBVEgiLCJDTElFTlRfU1JDX1BBVEgiLCJQVUJMSUNfUEFUSCIsIk1JRERMRVdBUkVTX1BBVEgiLCJTRVJWRVJfQ0ZHX05BTUUiLCJTRVJWRVJfRkVBVFVSRVNfUEFUSCIsIkFQUF9GRUFUVVJFU19QQVRIIiwiQ09OVFJPTExFUlNfUEFUSCIsIlJFU09VUkNFU19QQVRIIiwiV1NfQ09OVFJPTExFUlNfUEFUSCIsIlZJRVdTX1BBVEgiLCJNT0RFTFNfUEFUSCIsIkRCX1NDUklQVFNfUEFUSCIsIkxPQ0FMRV9QQVRIIiwiQUxMT1dFRF9IVFRQX01FVEhPRFMiLCJTZXQiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsK0JBQUQsQ0FBdkI7O0FBZ0JBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JMLE9BQWxCLEVBQTJCO0FBSXhDTSxFQUFBQSxnQkFBZ0IsRUFBRSxhQUpzQjtBQVN4Q0MsRUFBQUEsWUFBWSxFQUFFLFFBVDBCO0FBY3hDQyxFQUFBQSxnQkFBZ0IsRUFBRSxLQWRzQjtBQW1CeENDLEVBQUFBLGVBQWUsRUFBRSxRQW5CdUI7QUF3QnhDQyxFQUFBQSxXQUFXLEVBQUUsUUF4QjJCO0FBNkJ4Q0MsRUFBQUEsZ0JBQWdCLEVBQUUsYUE3QnNCO0FBa0N4Q0MsRUFBQUEsZUFBZSxFQUFFLFFBbEN1QjtBQXVDeENDLEVBQUFBLG9CQUFvQixFQUFFLGdCQXZDa0I7QUE0Q3hDQyxFQUFBQSxpQkFBaUIsRUFBRSxhQTVDcUI7QUFpRHhDQyxFQUFBQSxnQkFBZ0IsRUFBRSxhQWpEc0I7QUFzRHhDQyxFQUFBQSxjQUFjLEVBQUUsV0F0RHdCO0FBMkR4Q0MsRUFBQUEsbUJBQW1CLEVBQUUsZUEzRG1CO0FBZ0V4Q0MsRUFBQUEsVUFBVSxFQUFFLE9BaEU0QjtBQXFFeENDLEVBQUFBLFdBQVcsRUFBRSxRQXJFMkI7QUEwRXhDQyxFQUFBQSxlQUFlLEVBQUUsSUExRXVCO0FBK0V4Q0MsRUFBQUEsV0FBVyxFQUFFLFFBL0UyQjtBQW9GeENDLEVBQUFBLG9CQUFvQixFQUFFLElBQUlDLEdBQUosQ0FBUSxDQUFDLFNBQUQsRUFBWSxLQUFaLEVBQW1CLE1BQW5CLEVBQTJCLE1BQTNCLEVBQW1DLEtBQW5DLEVBQTBDLFFBQTFDLEVBQW9ELE9BQXBELEVBQTZELFNBQTdELENBQVI7QUFwRmtCLENBQTNCLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IExpdGVyYWwgPSByZXF1aXJlKCdAay1zdWl0ZS9hcHAvbGliL2VudW0vTGl0ZXJhbCcpO1xuXG4vKipcbiAqIENvbW1vbiBjb25zdGFudHNcbiAqIEBtb2R1bGUgTGl0ZXJhbFxuICogXG4gKiBAZXhhbXBsZVxuICogICBjb25zdCBMaXRlcmFsID0gcmVxdWlyZSgnQGstc3VpdGUvc2VydmVyL2xpYi9lbnVtL0xpdGVyYWwnKTtcbiAqL1xuXG4vKipcbiAqIENvbW1vbiBjb25zdGFudCBkZWZpbml0aW9ucy5cbiAqIEByZWFkb25seVxuICogQGVudW0ge3N0cmluZ31cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5hc3NpZ24oe30sIExpdGVyYWwsIHtcbiAgICAvKipcbiAgICAgKiBBcHAgbW9kdWxlcyBwYXRoXG4gICAgICovXG4gICAgQVBQX01PRFVMRVNfUEFUSDogJ2FwcF9tb2R1bGVzJywgICAgXG5cbiAgICAvKipcbiAgICAgKiBCYWNrZW5kIGZpbGVzIHBhdGhcbiAgICAgKi9cbiAgICBCQUNLRU5EX1BBVEg6ICdzZXJ2ZXInLFxuXG4gICAgLyoqXG4gICAgICogQmFja2VuZCBzb3VyY2VzIHBhdGhcbiAgICAgKi9cbiAgICBCQUNLRU5EX1NSQ19QQVRIOiAnc3JjJyxcblxuICAgIC8qKlxuICAgICAqIEZyb250ZW5kIHNvdXJjZSBmaWxlcyBwYXRoLCBlLmcuIHJlYWN0IHNvdXJjZVxuICAgICAqL1xuICAgIENMSUVOVF9TUkNfUEFUSDogJ2NsaWVudCcsXG5cbiAgICAvKipcbiAgICAgKiBGcm9udGVuZCBzdGF0aWMgZmlsZXMgcGF0aCwgZS5nLiBpbWFnZXMsIGNzcywganNcbiAgICAgKi9cbiAgICBQVUJMSUNfUEFUSDogJ3B1YmxpYycsXG5cbiAgICAvKipcbiAgICAgKiBNaWRkbGV3YXJlIGZpbGVzIHBhdGhcbiAgICAgKi9cbiAgICBNSURETEVXQVJFU19QQVRIOiAnbWlkZGxld2FyZXMnLCAgICBcblxuICAgIC8qKlxuICAgICAqIFNlcnZlci13aWRlIGNvbmZpZyBmaWxlIG5hbWVcbiAgICAgKi9cbiAgICBTRVJWRVJfQ0ZHX05BTUU6ICdzZXJ2ZXInLCAgICBcblxuICAgIC8qKlxuICAgICAqIFNlcnZlciBmZWF0dXJlcyBwYXRoXG4gICAgICovXG4gICAgU0VSVkVSX0ZFQVRVUkVTX1BBVEg6ICdzZXJ2ZXJGZWF0dXJlcycsXG5cbiAgICAvKipcbiAgICAgKiBBcHAgc3BlY2lmaWMgZmVhdHVyZXMgcGF0aFxuICAgICAqL1xuICAgIEFQUF9GRUFUVVJFU19QQVRIOiAnYXBwRmVhdHVyZXMnLFxuXG4gICAgLyoqXG4gICAgICogQ29udHJvbGxlcnMgZmlsZXMgcGF0aCwgdW5kZXIgYmFja2VuZCBmb2xkZXJcbiAgICAgKi9cbiAgICBDT05UUk9MTEVSU19QQVRIOiAnY29udHJvbGxlcnMnLFxuXG4gICAgLyoqXG4gICAgICogQ29udHJvbGxlcnMgZmlsZXMgcGF0aCwgdW5kZXIgYmFja2VuZCBmb2xkZXJcbiAgICAgKi9cbiAgICBSRVNPVVJDRVNfUEFUSDogJ3Jlc291cmNlcycsXG5cbiAgICAvKipcbiAgICAgKiBXZWItc29ja2V0IGNvbnRyb2xsZXJzIHBhdGhcbiAgICAgKi9cbiAgICBXU19DT05UUk9MTEVSU19QQVRIOiAnd3NDb250cm9sbGVycycsXG5cbiAgICAvKipcbiAgICAgKiBWaWV3cyBmaWxlcyBwYXRoLCB1bmRlciBiYWNrZW5kIGZvbGRlclxuICAgICAqL1xuICAgIFZJRVdTX1BBVEg6ICd2aWV3cycsXG5cbiAgICAvKipcbiAgICAgKiBNb2RlbHMgZmlsZXMgcGF0aCwgdW5kZXIgYmFja2VuZCBmb2xkZXJcbiAgICAgKi9cbiAgICBNT0RFTFNfUEFUSDogJ21vZGVscycsXG5cbiAgICAvKipcbiAgICAgKiBEYXRhYmFzZSBzY3JpcHRzIHBhdGhcbiAgICAgKi9cbiAgICBEQl9TQ1JJUFRTX1BBVEg6ICdkYicsXG5cbiAgICAvKipcbiAgICAgKiBMb2NhbGUgZGljdGlvbmFyeSBmaWxlcyBwYXRoXG4gICAgICovXG4gICAgTE9DQUxFX1BBVEg6ICdsb2NhbGUnLFxuXG4gICAgLyoqXG4gICAgICogQWxsb3dlZCBodHRwIG1ldGhvZHNcbiAgICAgKi9cbiAgICBBTExPV0VEX0hUVFBfTUVUSE9EUzogbmV3IFNldChbJ29wdGlvbnMnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAnZGVsZXRlJywgJ3RyYWNlJywgJ2Nvbm5lY3QnXSlcbn0pOyJdfQ==