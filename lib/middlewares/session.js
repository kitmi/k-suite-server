"use strict";

require("source-map-support/register");

const Util = require('rk-utils');

const session = require('koa-session-mowa');

const {
  InvalidConfiguration
} = require('../Errors');

const DEFAULT_OPTS = {
  key: 'k-server.sid',
  prefix: 'k-server:sess:'
};

module.exports = (options, app) => {
  let store = options.store || {
    type: 'memory'
  };

  if (!store.type) {
    throw new InvalidConfiguration('Missing session store type.', app, 'middlewares.session.store');
  }

  let storeObject;

  switch (store.type) {
    case 'redis':
      storeObject = require('koa-redis')(store.options);
      break;

    case 'mysql':
      storeObject = require('koa-mysql-session')(store.options);
      break;

    case 'mongodb':
      storeObject = require('koa-generic-session-mongo')(store.options);
      break;

    case 'pgsql':
      storeObject = require('koa-pg-session')(store.options);
      break;

    case 'sqlite3':
      storeObject = require('koa-sqlite3-session')(store.options);
      break;

    case 'memory':
      const MemoryStore = require('koa-session-memory');

      storeObject = new MemoryStore();
      break;

    default:
      throw new Mowa.Error.InvalidConfiguration('Unsupported session store type: ' + store.type, app, 'middlewares.session.store.type');
  }

  let sessionOptions = Object.assign({}, DEFAULT_OPTS, options, {
    store: storeObject
  });
  return session(sessionOptions);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlcy9zZXNzaW9uLmpzIl0sIm5hbWVzIjpbIlV0aWwiLCJyZXF1aXJlIiwic2Vzc2lvbiIsIkludmFsaWRDb25maWd1cmF0aW9uIiwiREVGQVVMVF9PUFRTIiwia2V5IiwicHJlZml4IiwibW9kdWxlIiwiZXhwb3J0cyIsIm9wdGlvbnMiLCJhcHAiLCJzdG9yZSIsInR5cGUiLCJzdG9yZU9iamVjdCIsIk1lbW9yeVN0b3JlIiwiTW93YSIsIkVycm9yIiwic2Vzc2lvbk9wdGlvbnMiLCJPYmplY3QiLCJhc3NpZ24iXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBT0EsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFwQjs7QUFDQSxNQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxrQkFBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVFLEVBQUFBO0FBQUYsSUFBMkJGLE9BQU8sQ0FBQyxXQUFELENBQXhDOztBQUVBLE1BQU1HLFlBQVksR0FBRztBQUNqQkMsRUFBQUEsR0FBRyxFQUFFLGNBRFk7QUFFakJDLEVBQUFBLE1BQU0sRUFBRTtBQUZTLENBQXJCOztBQXVCQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLENBQUNDLE9BQUQsRUFBVUMsR0FBVixLQUFrQjtBQUUvQixNQUFJQyxLQUFLLEdBQUdGLE9BQU8sQ0FBQ0UsS0FBUixJQUFpQjtBQUFFQyxJQUFBQSxJQUFJLEVBQUU7QUFBUixHQUE3Qjs7QUFFQSxNQUFJLENBQUNELEtBQUssQ0FBQ0MsSUFBWCxFQUFpQjtBQUNiLFVBQU0sSUFBSVQsb0JBQUosQ0FDRiw2QkFERSxFQUVGTyxHQUZFLEVBR0YsMkJBSEUsQ0FBTjtBQUtIOztBQUVELE1BQUlHLFdBQUo7O0FBRUEsVUFBUUYsS0FBSyxDQUFDQyxJQUFkO0FBQ0ksU0FBSyxPQUFMO0FBQ0lDLE1BQUFBLFdBQVcsR0FBR1osT0FBTyxDQUFDLFdBQUQsQ0FBUCxDQUFxQlUsS0FBSyxDQUFDRixPQUEzQixDQUFkO0FBQ0E7O0FBQ0osU0FBSyxPQUFMO0FBQ0lJLE1BQUFBLFdBQVcsR0FBR1osT0FBTyxDQUFDLG1CQUFELENBQVAsQ0FBNkJVLEtBQUssQ0FBQ0YsT0FBbkMsQ0FBZDtBQUNBOztBQUNKLFNBQUssU0FBTDtBQUNJSSxNQUFBQSxXQUFXLEdBQUdaLE9BQU8sQ0FBQywyQkFBRCxDQUFQLENBQXFDVSxLQUFLLENBQUNGLE9BQTNDLENBQWQ7QUFDQTs7QUFDSixTQUFLLE9BQUw7QUFDSUksTUFBQUEsV0FBVyxHQUFHWixPQUFPLENBQUMsZ0JBQUQsQ0FBUCxDQUEwQlUsS0FBSyxDQUFDRixPQUFoQyxDQUFkO0FBQ0E7O0FBQ0osU0FBSyxTQUFMO0FBQ0lJLE1BQUFBLFdBQVcsR0FBR1osT0FBTyxDQUFDLHFCQUFELENBQVAsQ0FBK0JVLEtBQUssQ0FBQ0YsT0FBckMsQ0FBZDtBQUNBOztBQUNKLFNBQUssUUFBTDtBQUNJLFlBQU1LLFdBQVcsR0FBR2IsT0FBTyxDQUFDLG9CQUFELENBQTNCOztBQUNBWSxNQUFBQSxXQUFXLEdBQUcsSUFBSUMsV0FBSixFQUFkO0FBQ0E7O0FBQ0o7QUFDSSxZQUFNLElBQUlDLElBQUksQ0FBQ0MsS0FBTCxDQUFXYixvQkFBZixDQUNGLHFDQUFxQ1EsS0FBSyxDQUFDQyxJQUR6QyxFQUVGRixHQUZFLEVBR0YsZ0NBSEUsQ0FBTjtBQXJCUjs7QUE0QkEsTUFBSU8sY0FBYyxHQUFHQyxNQUFNLENBQUNDLE1BQVAsQ0FBYyxFQUFkLEVBQWtCZixZQUFsQixFQUFnQ0ssT0FBaEMsRUFBeUM7QUFBQ0UsSUFBQUEsS0FBSyxFQUFFRTtBQUFSLEdBQXpDLENBQXJCO0FBRUEsU0FBT1gsT0FBTyxDQUFDZSxjQUFELENBQWQ7QUFDSCxDQTdDRCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIFNlc3Npb24gbWlkZGxld2FyZVxuICogQG1vZHVsZSBNaWRkbGV3YXJlX1Nlc3Npb25cbiAqL1xuXG5jb25zdCBVdGlsID0gcmVxdWlyZSgncmstdXRpbHMnKTtcbmNvbnN0IHNlc3Npb24gPSByZXF1aXJlKCdrb2Etc2Vzc2lvbi1tb3dhJyk7XG5jb25zdCB7IEludmFsaWRDb25maWd1cmF0aW9uIH0gPSByZXF1aXJlKCcuLi9FcnJvcnMnKTtcblxuY29uc3QgREVGQVVMVF9PUFRTID0ge1xuICAgIGtleTogJ2stc2VydmVyLnNpZCcsXG4gICAgcHJlZml4OiAnay1zZXJ2ZXI6c2VzczonXG59O1xuXG4vKipcbiAqIEluaXRpYWxpemUgc2Vzc2lvbiBtaWRkbGV3YXJlXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9ucyAtIFNlc3Npb24gb3B0aW9ucyBcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBbb3B0aW9ucy5rZXk9J21vd2E6c2lkJ10gLSBDb29raWUgbmFtZSBkZWZhdWx0aW5nIHRvIG1vd2Euc2lkIFxuICogQHByb3BlcnR5IHtzdHJpbmd9IFtvcHRpb25zLnByZWZpeD0nbW93YTpzZXNzOiddIC0gU2Vzc2lvbiBwcmVmaXggZm9yIHN0b3JlLCBkZWZhdWx0aW5nIHRvIG1vd2E6c2VzczpcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBbb3B0aW9ucy5tYXhBZ2VdIC0gU2Vzc2lvblN0b3JlJ3MgZXhwaXJhdGlvbiB0aW1lIChtcyksIGRlZmF1bHRpbmcgdG8gODY0MDAwMDAgKDEgZGF5KVxuICogQHByb3BlcnR5IHtib29sfSBbb3B0aW9ucy5hdXRvQ29tbWl0PXRydWVdIC0gQXV0b21hdGljYWxseSBjb21taXQgaGVhZGVycyAoZGVmYXVsdCB0cnVlKVxuICogQHByb3BlcnR5IHtib29sfSBbb3B0aW9ucy5vdmVyd3JpdGU9dHJ1ZV0gLSBDYW4gb3ZlcndyaXRlIG9yIG5vdCAoZGVmYXVsdCB0cnVlKSBcbiAqIEBwcm9wZXJ0eSB7Ym9vbH0gW29wdGlvbnMuaHR0cE9ubHk9dHJ1ZV0gLSBIdHRwT25seSBvciBub3QgKGRlZmF1bHQgdHJ1ZSlcbiAqIEBwcm9wZXJ0eSB7Ym9vbH0gW29wdGlvbnMuc2lnbmVkPXRydWVdIC0gU2lnbmVkIG9yIG5vdFxuICogQHByb3BlcnR5IHtib29sfSBbb3B0aW9ucy5yb2xsaW5nPWZhbHNlXSAtIEZvcmNlIGEgc2Vzc2lvbiBpZGVudGlmaWVyIGNvb2tpZSB0byBiZSBzZXQgb24gZXZlcnkgcmVzcG9uc2UuIFRoZSBleHBpcmF0aW9uIGlzIHJlc2V0IHRvIHRoZSBvcmlnaW5hbCBtYXhBZ2UsIHJlc2V0dGluZyB0aGUgZXhwaXJhdGlvbiBjb3VudGRvd24uIChkZWZhdWx0IGlzIGZhbHNlKSBcbiAqIEBwcm9wZXJ0eSB7Ym9vbH0gW29wdGlvbnMucmVuZXc9ZmFsc2VdIC0gUmVuZXcgc2Vzc2lvbiB3aGVuIHNlc3Npb24gaXMgbmVhcmx5IGV4cGlyZWQsIHNvIHdlIGNhbiBhbHdheXMga2VlcCB1c2VyIGxvZ2dlZCBpbi4gKGRlZmF1bHQgaXMgZmFsc2UpXG4gKiBAcHJvcGVydHkge2Z1bmN0aW9ufSBbb3B0aW9ucy5nZW5TaWRdIC0gVGhlIHdheSBvZiBnZW5lcmF0aW5nIGV4dGVybmFsIHNlc3Npb24gaWQgaXMgY29udHJvbGxlZCBieSB0aGUgb3B0aW9ucy5nZW5pZCwgd2hpY2ggZGVmYXVsdHMgdG8gRGF0ZS5ub3coKSArICctJyArIHVpZC5zeW5jKDI0KVxuICogQHByb3BlcnR5IHtmdW5jdGlvbn0gW29wdGlvbnMudmFsaWRdIC0gdmFsaWQoY3R4LCBzZXNzaW9uKSwgdmFsaWQgc2Vzc2lvbiB2YWx1ZSBiZWZvcmUgdXNlIGl0XG4gKiBAcHJvcGVydHkge2Z1bmN0aW9ufSBbb3B0aW9ucy5iZWZvcmVTYXZlXSAtIGJlZm9yZVNhdmUoY3R4LCBzZXNzaW9uKSwgaG9vayBiZWZvcmUgc2F2ZSBzZXNzaW9uXG4gKiBAcHJvcGVydHkge29iamVjdH0gW29wdGlvbnMuc3RvcmVdIC0gU2Vzc2lvbiBzdG9yZSBpbnN0YW5jZS4gSXQgY2FuIGJlIGFueSBPYmplY3QgdGhhdCBoYXMgdGhlIG1ldGhvZHMgc2V0LCBnZXQsIGRlc3Ryb3kgbGlrZSBNZW1vcnlTdG9yZS5cbiAqIEBwYXJhbSB7Um91dGFibGV9IGFwcCBcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSAob3B0aW9ucywgYXBwKSA9PiB7XG5cbiAgICBsZXQgc3RvcmUgPSBvcHRpb25zLnN0b3JlIHx8IHsgdHlwZTogJ21lbW9yeScgfTtcblxuICAgIGlmICghc3RvcmUudHlwZSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZENvbmZpZ3VyYXRpb24oXG4gICAgICAgICAgICAnTWlzc2luZyBzZXNzaW9uIHN0b3JlIHR5cGUuJyxcbiAgICAgICAgICAgIGFwcCxcbiAgICAgICAgICAgICdtaWRkbGV3YXJlcy5zZXNzaW9uLnN0b3JlJ1xuICAgICAgICApOyAgICAgICAgXG4gICAgfVxuXG4gICAgbGV0IHN0b3JlT2JqZWN0O1xuXG4gICAgc3dpdGNoIChzdG9yZS50eXBlKSB7XG4gICAgICAgIGNhc2UgJ3JlZGlzJzpcbiAgICAgICAgICAgIHN0b3JlT2JqZWN0ID0gcmVxdWlyZSgna29hLXJlZGlzJykoc3RvcmUub3B0aW9ucyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnbXlzcWwnOlxuICAgICAgICAgICAgc3RvcmVPYmplY3QgPSByZXF1aXJlKCdrb2EtbXlzcWwtc2Vzc2lvbicpKHN0b3JlLm9wdGlvbnMpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ21vbmdvZGInOlxuICAgICAgICAgICAgc3RvcmVPYmplY3QgPSByZXF1aXJlKCdrb2EtZ2VuZXJpYy1zZXNzaW9uLW1vbmdvJykoc3RvcmUub3B0aW9ucyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAncGdzcWwnOlxuICAgICAgICAgICAgc3RvcmVPYmplY3QgPSByZXF1aXJlKCdrb2EtcGctc2Vzc2lvbicpKHN0b3JlLm9wdGlvbnMpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3NxbGl0ZTMnOlxuICAgICAgICAgICAgc3RvcmVPYmplY3QgPSByZXF1aXJlKCdrb2Etc3FsaXRlMy1zZXNzaW9uJykoc3RvcmUub3B0aW9ucyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnbWVtb3J5JzpcbiAgICAgICAgICAgIGNvbnN0IE1lbW9yeVN0b3JlID0gcmVxdWlyZSgna29hLXNlc3Npb24tbWVtb3J5Jyk7XG4gICAgICAgICAgICBzdG9yZU9iamVjdCA9IG5ldyBNZW1vcnlTdG9yZSgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgTW93YS5FcnJvci5JbnZhbGlkQ29uZmlndXJhdGlvbihcbiAgICAgICAgICAgICAgICAnVW5zdXBwb3J0ZWQgc2Vzc2lvbiBzdG9yZSB0eXBlOiAnICsgc3RvcmUudHlwZSxcbiAgICAgICAgICAgICAgICBhcHAsXG4gICAgICAgICAgICAgICAgJ21pZGRsZXdhcmVzLnNlc3Npb24uc3RvcmUudHlwZSdcbiAgICAgICAgICAgICk7XG4gICAgfVxuXG4gICAgbGV0IHNlc3Npb25PcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9PUFRTLCBvcHRpb25zLCB7c3RvcmU6IHN0b3JlT2JqZWN0fSk7XG5cbiAgICByZXR1cm4gc2Vzc2lvbihzZXNzaW9uT3B0aW9ucyk7XG59OyJdfQ==