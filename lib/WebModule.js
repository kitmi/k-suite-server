"use strict";

require("source-map-support/register");

const {
  _,
  ensureLeftSlash,
  trimRightSlash
} = require('rk-utils');

const path = require('path');

const {
  ServiceContainer
} = require('@k-suite/app');

const Routable = require('./Routable');

const Literal = require('./enum/Literal');

class WebModule extends Routable(ServiceContainer) {
  constructor(server, name, route, appPath, options) {
    super(name, Object.assign({
      workingPath: appPath,
      configPath: path.join(appPath, Literal.DEFAULT_CONFIG_PATH)
    }, options));
    this.server = server;
    this.isServer = false;
    this.route = ensureLeftSlash(trimRightSlash(route));
  }

  getService(name) {
    return super.getService(name) || this.server.getService(name);
  }

  log(level, message, ...rest) {
    if (this.options.logWithAppName) {
      message = '[' + this.name + '] ' + message;
    }

    this.server.log(level, message, ...rest);
    return this;
  }

  _getFeatureFallbackPath() {
    let pathArray = super._getFeatureFallbackPath();

    pathArray.splice(1, 0, path.resolve(__dirname, Literal.FEATURES_PATH), path.resolve(__dirname, Literal.APP_FEATURES_PATH));
    return pathArray;
  }

  _initialize() {}

  _uninitialize() {}

}

module.exports = WebModule;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9XZWJNb2R1bGUuanMiXSwibmFtZXMiOlsiXyIsImVuc3VyZUxlZnRTbGFzaCIsInRyaW1SaWdodFNsYXNoIiwicmVxdWlyZSIsInBhdGgiLCJTZXJ2aWNlQ29udGFpbmVyIiwiUm91dGFibGUiLCJMaXRlcmFsIiwiV2ViTW9kdWxlIiwiY29uc3RydWN0b3IiLCJzZXJ2ZXIiLCJuYW1lIiwicm91dGUiLCJhcHBQYXRoIiwib3B0aW9ucyIsIk9iamVjdCIsImFzc2lnbiIsIndvcmtpbmdQYXRoIiwiY29uZmlnUGF0aCIsImpvaW4iLCJERUZBVUxUX0NPTkZJR19QQVRIIiwiaXNTZXJ2ZXIiLCJnZXRTZXJ2aWNlIiwibG9nIiwibGV2ZWwiLCJtZXNzYWdlIiwicmVzdCIsImxvZ1dpdGhBcHBOYW1lIiwiX2dldEZlYXR1cmVGYWxsYmFja1BhdGgiLCJwYXRoQXJyYXkiLCJzcGxpY2UiLCJyZXNvbHZlIiwiX19kaXJuYW1lIiwiRkVBVFVSRVNfUEFUSCIsIkFQUF9GRUFUVVJFU19QQVRIIiwiX2luaXRpYWxpemUiLCJfdW5pbml0aWFsaXplIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxNQUFNO0FBQUVBLEVBQUFBLENBQUY7QUFBS0MsRUFBQUEsZUFBTDtBQUFzQkMsRUFBQUE7QUFBdEIsSUFBeUNDLE9BQU8sQ0FBQyxVQUFELENBQXREOztBQUNBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTTtBQUFFRSxFQUFBQTtBQUFGLElBQXVCRixPQUFPLENBQUMsY0FBRCxDQUFwQzs7QUFDQSxNQUFNRyxRQUFRLEdBQUdILE9BQU8sQ0FBQyxZQUFELENBQXhCOztBQUNBLE1BQU1JLE9BQU8sR0FBR0osT0FBTyxDQUFDLGdCQUFELENBQXZCOztBQU9BLE1BQU1LLFNBQU4sU0FBd0JGLFFBQVEsQ0FBQ0QsZ0JBQUQsQ0FBaEMsQ0FBbUQ7QUFTL0NJLEVBQUFBLFdBQVcsQ0FBQ0MsTUFBRCxFQUFTQyxJQUFULEVBQWVDLEtBQWYsRUFBc0JDLE9BQXRCLEVBQStCQyxPQUEvQixFQUF3QztBQUMvQyxVQUFNSCxJQUFOLEVBQVlJLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjO0FBQ3RCQyxNQUFBQSxXQUFXLEVBQUVKLE9BRFM7QUFFdEJLLE1BQUFBLFVBQVUsRUFBRWQsSUFBSSxDQUFDZSxJQUFMLENBQVVOLE9BQVYsRUFBbUJOLE9BQU8sQ0FBQ2EsbUJBQTNCO0FBRlUsS0FBZCxFQUdUTixPQUhTLENBQVo7QUFTQSxTQUFLSixNQUFMLEdBQWNBLE1BQWQ7QUFNQSxTQUFLVyxRQUFMLEdBQWdCLEtBQWhCO0FBTUEsU0FBS1QsS0FBTCxHQUFhWCxlQUFlLENBQUNDLGNBQWMsQ0FBQ1UsS0FBRCxDQUFmLENBQTVCO0FBQ0g7O0FBT0RVLEVBQUFBLFVBQVUsQ0FBQ1gsSUFBRCxFQUFPO0FBQ2IsV0FBTyxNQUFNVyxVQUFOLENBQWlCWCxJQUFqQixLQUEwQixLQUFLRCxNQUFMLENBQVlZLFVBQVosQ0FBdUJYLElBQXZCLENBQWpDO0FBQ0g7O0FBU0RZLEVBQUFBLEdBQUcsQ0FBQ0MsS0FBRCxFQUFRQyxPQUFSLEVBQWlCLEdBQUdDLElBQXBCLEVBQTBCO0FBQ3pCLFFBQUksS0FBS1osT0FBTCxDQUFhYSxjQUFqQixFQUFpQztBQUM3QkYsTUFBQUEsT0FBTyxHQUFHLE1BQU0sS0FBS2QsSUFBWCxHQUFrQixJQUFsQixHQUF5QmMsT0FBbkM7QUFDSDs7QUFDRCxTQUFLZixNQUFMLENBQVlhLEdBQVosQ0FBZ0JDLEtBQWhCLEVBQXVCQyxPQUF2QixFQUFnQyxHQUFHQyxJQUFuQztBQUNBLFdBQU8sSUFBUDtBQUNIOztBQUVERSxFQUFBQSx1QkFBdUIsR0FBRztBQUN0QixRQUFJQyxTQUFTLEdBQUcsTUFBTUQsdUJBQU4sRUFBaEI7O0FBQ0FDLElBQUFBLFNBQVMsQ0FBQ0MsTUFBVixDQUFpQixDQUFqQixFQUFvQixDQUFwQixFQUF1QjFCLElBQUksQ0FBQzJCLE9BQUwsQ0FBYUMsU0FBYixFQUF3QnpCLE9BQU8sQ0FBQzBCLGFBQWhDLENBQXZCLEVBQXVFN0IsSUFBSSxDQUFDMkIsT0FBTCxDQUFhQyxTQUFiLEVBQXdCekIsT0FBTyxDQUFDMkIsaUJBQWhDLENBQXZFO0FBQ0EsV0FBT0wsU0FBUDtBQUNIOztBQUVETSxFQUFBQSxXQUFXLEdBQUcsQ0FDYjs7QUFFREMsRUFBQUEsYUFBYSxHQUFHLENBQ2Y7O0FBcEU4Qzs7QUF1RW5EQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI5QixTQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCB7IF8sIGVuc3VyZUxlZnRTbGFzaCwgdHJpbVJpZ2h0U2xhc2ggfSA9IHJlcXVpcmUoJ3JrLXV0aWxzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgeyBTZXJ2aWNlQ29udGFpbmVyIH0gPSByZXF1aXJlKCdAay1zdWl0ZS9hcHAnKTtcbmNvbnN0IFJvdXRhYmxlID0gcmVxdWlyZSgnLi9Sb3V0YWJsZScpO1xuY29uc3QgTGl0ZXJhbCA9IHJlcXVpcmUoJy4vZW51bS9MaXRlcmFsJyk7XG5cbi8qKlxuICogV2ViIGFwcGxpY2F0aW9uIG1vZHVsZSBjbGFzcy5cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgUm91dGFibGUoU2VydmljZUNvbnRhaW5lcilcbiAqL1xuY2xhc3MgV2ViTW9kdWxlIGV4dGVuZHMgUm91dGFibGUoU2VydmljZUNvbnRhaW5lcikge1xuICAgIC8qKiAgICAgXG4gICAgICogQHBhcmFtIHtXZWJTZXJ2ZXJ9IHNlcnZlclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGFwcCBtb2R1bGUuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHJvdXRlIC0gVGhlIGJhc2Ugcm91dGUgb2YgdGhlIGFwcCBtb2R1bGUuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGFwcFBhdGggLSBUaGUgcGF0aCB0byBsb2FkIHRoZSBhcHAncyBtb2R1bGUgZmlsZXNcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdIC0gVGhlIGFwcCBtb2R1bGUncyBleHRyYSBvcHRpb25zIGRlZmluZWQgaW4gaXRzIHBhcmVudCdzIGNvbmZpZ3VyYXRpb24uICAgICAgICAgIFxuICAgICAqIEBwcm9wZXJ0eSB7Ym9vbH0gW29wdGlvbnMubG9nV2l0aEFwcE5hbWU9ZmFsc2VdIC0gRmxhZyB0byBpbmNsdWRlIGFwcCBuYW1lIGluIGxvZyBtZXNzYWdlLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHNlcnZlciwgbmFtZSwgcm91dGUsIGFwcFBhdGgsIG9wdGlvbnMpIHsgICAgXG4gICAgICAgIHN1cGVyKG5hbWUsIE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAgICAgd29ya2luZ1BhdGg6IGFwcFBhdGgsIFxuICAgICAgICAgICAgY29uZmlnUGF0aDogcGF0aC5qb2luKGFwcFBhdGgsIExpdGVyYWwuREVGQVVMVF9DT05GSUdfUEFUSClcbiAgICAgICAgfSwgb3B0aW9ucykpO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBIb3N0aW5nIHNlcnZlci5cbiAgICAgICAgICogQG1lbWJlciB7V2ViU2VydmVyfVxuICAgICAgICAgKiovXG4gICAgICAgIHRoaXMuc2VydmVyID0gc2VydmVyOyAgICAgICAgXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFdoZXRoZXIgaXQgaXMgYSBzZXJ2ZXIuXG4gICAgICAgICAqIEBtZW1iZXIge2Jvb2xlYW59XG4gICAgICAgICAqKi9cbiAgICAgICAgdGhpcy5pc1NlcnZlciA9IGZhbHNlO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBNb3VudGluZyByb3V0ZS5cbiAgICAgICAgICogQG1lbWJlciB7c3RyaW5nfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5yb3V0ZSA9IGVuc3VyZUxlZnRTbGFzaCh0cmltUmlnaHRTbGFzaChyb3V0ZSkpOyAgICAgICAgXG4gICAgfSAgXG5cbiAgICAvKipcbiAgICAgKiBHZXQgYSBzZXJ2aWNlIGZyb20gbW9kdWxlIGhpZXJhcmNoeSAgICAgXG4gICAgICogQHBhcmFtIG5hbWVcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fVxuICAgICAqL1xuICAgIGdldFNlcnZpY2UobmFtZSkge1xuICAgICAgICByZXR1cm4gc3VwZXIuZ2V0U2VydmljZShuYW1lKSB8fCB0aGlzLnNlcnZlci5nZXRTZXJ2aWNlKG5hbWUpO1xuICAgIH0gICAgXG5cbiAgICAvKipcbiAgICAgKiBEZWZhdWx0IGxvZyBtZXRob2QsIG1heSBiZSBvdmVycmlkZSBieSBsb2dnZXJzIGZlYXR1cmVcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGV2ZWwgLSBMb2cgbGV2ZWxcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSAtIExvZyBtZXNzYWdlXG4gICAgICogQHBhcmFtIHsuLi5vYmplY3R9IHJlc3QgLSBFeHRyYSBtZXRhIGRhdGFcbiAgICAgKiBAcmV0dXJucyB7Um91dGFibGV9XG4gICAgICovXG4gICAgbG9nKGxldmVsLCBtZXNzYWdlLCAuLi5yZXN0KSB7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMubG9nV2l0aEFwcE5hbWUpIHtcbiAgICAgICAgICAgIG1lc3NhZ2UgPSAnWycgKyB0aGlzLm5hbWUgKyAnXSAnICsgbWVzc2FnZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNlcnZlci5sb2cobGV2ZWwsIG1lc3NhZ2UsIC4uLnJlc3QpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBfZ2V0RmVhdHVyZUZhbGxiYWNrUGF0aCgpIHtcbiAgICAgICAgbGV0IHBhdGhBcnJheSA9IHN1cGVyLl9nZXRGZWF0dXJlRmFsbGJhY2tQYXRoKCk7XG4gICAgICAgIHBhdGhBcnJheS5zcGxpY2UoMSwgMCwgcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgTGl0ZXJhbC5GRUFUVVJFU19QQVRIKSwgcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgTGl0ZXJhbC5BUFBfRkVBVFVSRVNfUEFUSCkpO1xuICAgICAgICByZXR1cm4gcGF0aEFycmF5O1xuICAgIH1cblxuICAgIF9pbml0aWFsaXplKCkge1xuICAgIH1cblxuICAgIF91bmluaXRpYWxpemUoKSB7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFdlYk1vZHVsZTsiXX0=