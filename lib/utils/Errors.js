"use strict";

require("source-map-support/register");

const {
  withStatus
} = require('./Helpers');

const {
  Errors: {
    RequestError,
    ApplicationError
  }
} = require('@k-suite/app');

const HttpCode = require('http-status-codes');

class BadRequest extends withStatus(RequestError, HttpCode.BAD_REQUEST) {}

;

class NotFound extends withStatus(RequestError, HttpCode.NOT_FOUND) {}

;

class MethodNotAllowed extends withStatus(RequestError, HttpCode.METHOD_NOT_ALLOWED) {}

;

class ServerError extends withStatus(ApplicationError, HttpCode.INTERNAL_SERVER_ERROR) {}

;

class InvalidConfiguration extends ServerError {
  constructor(message, app, item) {
    super(message, 'E_INVALID_CONFIG', {
      app: app.name,
      configNode: item
    });
  }

}

exports.BadRequest = BadRequest;
exports.NotFound = NotFound;
exports.MethodNotAllowed = MethodNotAllowed;
exports.ServerError = ServerError;
exports.InvalidConfiguration = InvalidConfiguration;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9FcnJvcnMuanMiXSwibmFtZXMiOlsid2l0aFN0YXR1cyIsInJlcXVpcmUiLCJFcnJvcnMiLCJSZXF1ZXN0RXJyb3IiLCJBcHBsaWNhdGlvbkVycm9yIiwiSHR0cENvZGUiLCJCYWRSZXF1ZXN0IiwiQkFEX1JFUVVFU1QiLCJOb3RGb3VuZCIsIk5PVF9GT1VORCIsIk1ldGhvZE5vdEFsbG93ZWQiLCJNRVRIT0RfTk9UX0FMTE9XRUQiLCJTZXJ2ZXJFcnJvciIsIklOVEVSTkFMX1NFUlZFUl9FUlJPUiIsIkludmFsaWRDb25maWd1cmF0aW9uIiwiY29uc3RydWN0b3IiLCJtZXNzYWdlIiwiYXBwIiwiaXRlbSIsIm5hbWUiLCJjb25maWdOb2RlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFPQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBaUJDLE9BQU8sQ0FBQyxXQUFELENBQTlCOztBQUNBLE1BQU07QUFBRUMsRUFBQUEsTUFBTSxFQUFFO0FBQUVDLElBQUFBLFlBQUY7QUFBZ0JDLElBQUFBO0FBQWhCO0FBQVYsSUFBaURILE9BQU8sQ0FBQyxjQUFELENBQTlEOztBQUNBLE1BQU1JLFFBQVEsR0FBR0osT0FBTyxDQUFDLG1CQUFELENBQXhCOztBQVFBLE1BQU1LLFVBQU4sU0FBeUJOLFVBQVUsQ0FBQ0csWUFBRCxFQUFlRSxRQUFRLENBQUNFLFdBQXhCLENBQW5DLENBQXdFOztBQUN2RTs7QUFRRCxNQUFNQyxRQUFOLFNBQXVCUixVQUFVLENBQUNHLFlBQUQsRUFBZUUsUUFBUSxDQUFDSSxTQUF4QixDQUFqQyxDQUFvRTs7QUFFbkU7O0FBUUQsTUFBTUMsZ0JBQU4sU0FBK0JWLFVBQVUsQ0FBQ0csWUFBRCxFQUFlRSxRQUFRLENBQUNNLGtCQUF4QixDQUF6QyxDQUFxRjs7QUFFcEY7O0FBUUQsTUFBTUMsV0FBTixTQUEwQlosVUFBVSxDQUFDSSxnQkFBRCxFQUFtQkMsUUFBUSxDQUFDUSxxQkFBNUIsQ0FBcEMsQ0FBdUY7O0FBQ3RGOztBQU9ELE1BQU1DLG9CQUFOLFNBQW1DRixXQUFuQyxDQUErQztBQU0zQ0csRUFBQUEsV0FBVyxDQUFDQyxPQUFELEVBQVVDLEdBQVYsRUFBZUMsSUFBZixFQUFxQjtBQUM1QixVQUFNRixPQUFOLEVBQWUsa0JBQWYsRUFBbUM7QUFBRUMsTUFBQUEsR0FBRyxFQUFFQSxHQUFHLENBQUNFLElBQVg7QUFBaUJDLE1BQUFBLFVBQVUsRUFBRUY7QUFBN0IsS0FBbkM7QUFDSDs7QUFSMEM7O0FBVy9DRyxPQUFPLENBQUNmLFVBQVIsR0FBcUJBLFVBQXJCO0FBQ0FlLE9BQU8sQ0FBQ2IsUUFBUixHQUFtQkEsUUFBbkI7QUFDQWEsT0FBTyxDQUFDWCxnQkFBUixHQUEyQkEsZ0JBQTNCO0FBQ0FXLE9BQU8sQ0FBQ1QsV0FBUixHQUFzQkEsV0FBdEI7QUFDQVMsT0FBTyxDQUFDUCxvQkFBUixHQUErQkEsb0JBQS9CIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogRXJyb3IgZGVmaW5pdGlvbnMuXG4gKiBAbW9kdWxlIEVycm9yc1xuICovXG5cbmNvbnN0IHsgd2l0aFN0YXR1cyB9ID0gcmVxdWlyZSgnLi9IZWxwZXJzJyk7XG5jb25zdCB7IEVycm9yczogeyBSZXF1ZXN0RXJyb3IsIEFwcGxpY2F0aW9uRXJyb3IgfSB9ID0gcmVxdWlyZSgnQGstc3VpdGUvYXBwJyk7XG5jb25zdCBIdHRwQ29kZSA9IHJlcXVpcmUoJ2h0dHAtc3RhdHVzLWNvZGVzJyk7XG5cbi8qKlxuICogSHR0cCBCYWRSZXF1ZXN0LCA0MDAuXG4gKiBAY2xhc3MgXG4gKiBAZXh0ZW5kcyBSZXF1ZXN0RXJyb3JcbiAqIEBtaXhlcyB3aXRoU3RhdHVzXG4gKi9cbmNsYXNzIEJhZFJlcXVlc3QgZXh0ZW5kcyB3aXRoU3RhdHVzKFJlcXVlc3RFcnJvciwgSHR0cENvZGUuQkFEX1JFUVVFU1QpIHsgICAgICAgIFxufTtcblxuLyoqXG4gKiBIdHRwIE5vdEZvdW5kLCA0MDQuXG4gKiBAY2xhc3MgXG4gKiBAZXh0ZW5kcyBSZXF1ZXN0RXJyb3JcbiAqIEBtaXhlcyB3aXRoU3RhdHVzXG4gKi9cbmNsYXNzIE5vdEZvdW5kIGV4dGVuZHMgd2l0aFN0YXR1cyhSZXF1ZXN0RXJyb3IsIEh0dHBDb2RlLk5PVF9GT1VORCkge1xuXG59O1xuXG4vKipcbiAqIEh0dHAgTWV0aG9kTm90QWxsb3dlZCwgNDA1LlxuICogQGNsYXNzIFxuICogQGV4dGVuZHMgUmVxdWVzdEVycm9yXG4gKiBAbWl4ZXMgd2l0aFN0YXR1c1xuICovXG5jbGFzcyBNZXRob2ROb3RBbGxvd2VkIGV4dGVuZHMgd2l0aFN0YXR1cyhSZXF1ZXN0RXJyb3IsIEh0dHBDb2RlLk1FVEhPRF9OT1RfQUxMT1dFRCkge1xuXG59O1xuXG4vKipcbiAqIEVycm9yIGNhdXNlZCBieSBhbGwga2luZHMgb2YgcnVudGltZSBlcnJvcnMuXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIEFwcGxpY2F0aW9uRXJyb3IgXG4gKiBAbWl4ZXMgd2l0aFN0YXR1c1xuICovXG5jbGFzcyBTZXJ2ZXJFcnJvciBleHRlbmRzIHdpdGhTdGF0dXMoQXBwbGljYXRpb25FcnJvciwgSHR0cENvZGUuSU5URVJOQUxfU0VSVkVSX0VSUk9SKSB7XG59O1xuXG4vKipcbiAqIEVycm9yIGNhdXNlZCBieSBpbnZhbGlkIGNvbmZpZ3VyYXRpb24uXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIFNlcnZlckVycm9yICBcbiAqL1xuY2xhc3MgSW52YWxpZENvbmZpZ3VyYXRpb24gZXh0ZW5kcyBTZXJ2ZXJFcnJvciB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgLSBFcnJvciBtZXNzYWdlXG4gICAgICogQHBhcmFtIHtBcHB9IFthcHBdIC0gVGhlIHJlbGF0ZWQgYXBwIG1vZHVsZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbaXRlbV0gLSBUaGUgcmVsYXRlZCBjb25maWcgaXRlbSAgIFxuICAgICAqLyBcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBhcHAsIGl0ZW0pIHsgICAgICAgIFxuICAgICAgICBzdXBlcihtZXNzYWdlLCAnRV9JTlZBTElEX0NPTkZJRycsIHsgYXBwOiBhcHAubmFtZSwgY29uZmlnTm9kZTogaXRlbSB9KTtcbiAgICB9XG59XG5cbmV4cG9ydHMuQmFkUmVxdWVzdCA9IEJhZFJlcXVlc3Q7XG5leHBvcnRzLk5vdEZvdW5kID0gTm90Rm91bmQ7XG5leHBvcnRzLk1ldGhvZE5vdEFsbG93ZWQgPSBNZXRob2ROb3RBbGxvd2VkO1xuZXhwb3J0cy5TZXJ2ZXJFcnJvciA9IFNlcnZlckVycm9yO1xuZXhwb3J0cy5JbnZhbGlkQ29uZmlndXJhdGlvbiA9IEludmFsaWRDb25maWd1cmF0aW9uOyJdfQ==